post:
  tags:
    - User Management
  summary: Create User
  description: "Create and return a new User alongside a Bearer Token."
  operationId: create-user

  security: []

  requestBody:
    description: "Payload required to create a new user."
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            userName:
              $ref: '../components/schemas/common/names/userName.yaml'
            firstName:
              $ref: '../components/schemas/common/names/firstName.yaml'
            lastName:
              $ref: '../components/schemas/common/names/lastName.yaml'
            email:
              $ref: '../components/schemas/common/email.yaml'
            password:
              $ref: '../components/schemas/common/password.yaml'

  responses:
    "201":
      description: "Created"
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  _id:
                    $ref: '../components/schemas/common/ids/bson.yaml'
                  userName:
                    $ref: '../components/schemas/common/names/userName.yaml'
                  firstName:
                    $ref: '../components/schemas/common/names/firstName.yaml'
                  lastName:
                    $ref: '../components/schemas/common/names/lastName.yaml'
                  email:
                    $ref: '../components/schemas/common/email.yaml'
                  # TODO: Add remaining fields
              token:
                $ref: '../components/schemas/jwt.yaml'

    "400":
      description: "Bad Request"
      content:
        text/plain:
          schema:
            type: string
            description: "Unable to create a new user."

    "500":
      $ref: '../components/schemas/responses/500.yaml'

# ---------------------------------------- #

get:
  tags:
    - User Management
  summary: Get User
  description: "Returns the currently authenticated user."
  operationId: get-user

  security:
    - bearerToken: []

  responses:
      "200":
        description: "OK"
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    _id:
                      $ref: '../components/schemas/common/ids/bson.yaml'
                    userName:
                      $ref: '../components/schemas/common/names/userName.yaml'
                    firstName:
                      $ref: '../components/schemas/common/names/firstName.yaml'
                    lastName:
                      $ref: '../components/schemas/common/names/lastName.yaml'
                    email:
                      $ref: '../components/schemas/common/email.yaml'
                    # TODO: Add remaining fields

      "400":
        description: "Bad Request"

      "401":
        description: "Unauthorized"

      "500":
        $ref: '../components/schemas/responses/500.yaml'

# ---------------------------------------- #

patch:
  tags:
    - User Management
  summary: Update User
  description: "Update the currently authenticated user."
  operationId: update-user

  security:
    - bearerToken: []

  requestBody:
    description: "Payload requires at least target property to update."
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                userName:
                  $ref: '../components/schemas/common/names/userName.yaml'
                firstName:
                  $ref: '../components/schemas/common/names/firstName.yaml'
                lastName:
                  $ref: '../components/schemas/common/names/lastName.yaml'
                email:
                  $ref: '../components/schemas/common/email.yaml'
                password:
                  $ref: '../components/schemas/common/password.yaml'

  responses:
    "200":
      description: "OK"
      content:
        application/json:
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  _id:
                    $ref: '../components/schemas/common/ids/bson.yaml'
                  userName:
                    $ref: '../components/schemas/common/names/userName.yaml'
                  firstName:
                    $ref: '../components/schemas/common/names/firstName.yaml'
                  lastName:
                    $ref: '../components/schemas/common/names/lastName.yaml'
                  email:
                    $ref: '../components/schemas/common/email.yaml'
                  # TODO: Add remaining fields

    "400":
      description: "Bad Request"
      content:
        text/plain:
          schema:
            type: string
            description: "Unable to update user."

    "401":
      description: "Unauthorized"

    "500":
      $ref: '../components/schemas/responses/500.yaml'

# ---------------------------------------- #

delete:
  tags:
    - User Management
  summary: Delete User
  description: "Delete the currently authenticated user."
  operationId: delete-user

  security:
    - bearerToken: []

  responses:
    "204":
      description: "No Content"

    "400":
      description: "Bad Request"

    "401":
      description: "Unauthorized"

    "500":
      $ref: '../components/schemas/responses/500.yaml'